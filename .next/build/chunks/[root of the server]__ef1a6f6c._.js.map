{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/postcss.config.mjs/transform.ts"],"sourcesContent":["declare const __turbopack_external_require__: (id: string, thunk: () => any, esm?: boolean) => any;\n\nimport type {Processor} from \"postcss\";\n\n// @ts-ignore\nimport postcss from \"@vercel/turbopack/postcss\";\n// @ts-ignore\nimport importedConfig from \"CONFIG\";\nimport { relative, isAbsolute, sep } from \"path\";\nimport type { Ipc } from \"../ipc/evaluate\";\nimport type { IpcInfoMessage, IpcRequestMessage } from \"./webpack-loaders\";\n\nconst contextDir = process.cwd();\n\nfunction toPath(file: string) {\n  const relPath = relative(contextDir, file);\n  if (isAbsolute(relPath)) {\n    throw new Error(\n      `Cannot depend on path (${file}) outside of root directory (${contextDir})`\n    );\n  }\n  return sep !== \"/\" ? relPath.replaceAll(sep, \"/\") : relPath;\n}\n\nlet processor: Processor | undefined;\n\nexport const init = async (ipc: Ipc<IpcInfoMessage, IpcRequestMessage>) => {\n  let config = importedConfig;\n  if (typeof config === \"function\") {\n    config = await config({ env: \"development\" });\n  }\n  if (typeof config === \"undefined\") {\n    throw new Error(\n      \"PostCSS config is undefined (make sure to export an function or object from config file)\"\n    );\n  }\n  let plugins: any[];\n  if (Array.isArray(config.plugins)) {\n    plugins = config.plugins.map((plugin: [string, any] | string | any) => {\n      if (Array.isArray(plugin)) {\n        return plugin;\n      } else if (typeof plugin === \"string\") {\n        return [plugin, {}];\n      } else {\n        return plugin;\n      }\n    });\n  } else if (typeof config.plugins === \"object\") {\n    plugins = Object.entries(config.plugins).filter(([, options]) => options);\n  } else {\n    plugins = [];\n  }\n  const loadedPlugins = plugins.map((plugin) => {\n    if (Array.isArray(plugin)) {\n      const [arg, options] = plugin;\n      let pluginFactory = arg;\n\n      if (typeof pluginFactory === \"string\") {\n        pluginFactory = require(/* turbopackIgnore: true */ pluginFactory);\n      }\n\n      if (pluginFactory.default) {\n        pluginFactory = pluginFactory.default;\n      }\n\n      return pluginFactory(options);\n    }\n    return plugin;\n  });\n\n  processor = postcss(loadedPlugins);\n};\n\nexport default async function transform(\n  ipc: Ipc<IpcInfoMessage, IpcRequestMessage>,\n  cssContent: string,\n  name: string,\n  sourceMap: boolean\n) {\n  const { css, map, messages } = await processor!.process(cssContent, {\n    from: name,\n    to: name,\n    map: sourceMap ? {\n      inline: false,\n      annotation: false,\n    } : undefined,\n  });\n\n  const assets = [];\n  for (const msg of messages) {\n    switch (msg.type) {\n      case \"asset\":\n        assets.push({\n          file: msg.file,\n          content: msg.content,\n          sourceMap:\n            !sourceMap\n              ? undefined\n              : typeof msg.sourceMap === \"string\"\n              ? msg.sourceMap\n              : JSON.stringify(msg.sourceMap),\n          // There is also an info field, which we currently ignore\n        });\n        break;\n      case \"dependency\":\n      case \"missing-dependency\":\n        ipc.sendInfo({\n          type: \"fileDependency\",\n          path: toPath(msg.file),\n        });\n        break;\n      case \"build-dependency\":\n        ipc.sendInfo({\n          type: \"buildDependency\",\n          path: toPath(msg.file),\n        });\n        break;\n      case \"dir-dependency\":\n        ipc.sendInfo({\n          type: \"dirDependency\",\n          path: toPath(msg.dir),\n          glob: msg.glob,\n        });\n        break;\n      case \"context-dependency\":\n        ipc.sendInfo({\n          type: \"dirDependency\",\n          path: toPath(msg.file),\n          glob: \"**\",\n        });\n        break;\n      default:\n        // TODO: do we need to do anything here?\n        break;\n    }\n  }\n  return {\n    css,\n    map: sourceMap ? JSON.stringify(map) : undefined,\n    assets,\n  };\n}\n"],"names":[],"mappings":";;;;AAIA,aAAa;AACb;AACA,aAAa;AACb;AACA;;;;AAIA,MAAM,aAAa,QAAQ,GAAG;AAE9B,SAAS,OAAO,IAAY;IAC1B,MAAM,UAAU,CAAA,GAAA,iGAAA,CAAA,WAAQ,AAAD,EAAE,YAAY;IACrC,IAAI,CAAA,GAAA,iGAAA,CAAA,aAAU,AAAD,EAAE,UAAU;QACvB,MAAM,IAAI,MACR,CAAC,uBAAuB,EAAE,KAAK,6BAA6B,EAAE,WAAW,CAAC,CAAC;IAE/E;IACA,OAAO,iGAAA,CAAA,MAAG,KAAK,MAAM,QAAQ,UAAU,CAAC,iGAAA,CAAA,MAAG,EAAE,OAAO;AACtD;AAEA,IAAI;AAEG,MAAM,OAAO,OAAO;IACzB,IAAI,SAAS,+GAAA,CAAA,UAAc;IAC3B,IAAI,OAAO,WAAW,YAAY;QAChC,SAAS,MAAM,OAAO;YAAE,KAAK;QAAc;IAC7C;IACA,IAAI,OAAO,WAAW,aAAa;QACjC,MAAM,IAAI,MACR;IAEJ;IACA,IAAI;IACJ,IAAI,MAAM,OAAO,CAAC,OAAO,OAAO,GAAG;QACjC,UAAU,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,MAAM,OAAO,CAAC,SAAS;gBACzB,OAAO;YACT,OAAO,IAAI,OAAO,WAAW,UAAU;gBACrC,OAAO;oBAAC;oBAAQ,CAAC;iBAAE;YACrB,OAAO;gBACL,OAAO;YACT;QACF;IACF,OAAO,IAAI,OAAO,OAAO,OAAO,KAAK,UAAU;QAC7C,UAAU,OAAO,OAAO,CAAC,OAAO,OAAO,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAK;IACnE,OAAO;QACL,UAAU,EAAE;IACd;IACA,MAAM,gBAAgB,QAAQ,GAAG,CAAC,CAAC;QACjC,IAAI,MAAM,OAAO,CAAC,SAAS;YACzB,MAAM,CAAC,KAAK,QAAQ,GAAG;YACvB,IAAI,gBAAgB;YAEpB,IAAI,OAAO,kBAAkB,UAAU;gBACrC,gBAAgB,QAAQ,yBAAyB,GAAG;YACtD;YAEA,IAAI,cAAc,OAAO,EAAE;gBACzB,gBAAgB,cAAc,OAAO;YACvC;YAEA,OAAO,cAAc;QACvB;QACA,OAAO;IACT;IAEA,YAAY,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE;AACtB;AAEe,eAAe,UAC5B,GAA2C,EAC3C,UAAkB,EAClB,IAAY,EACZ,SAAkB;IAElB,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,MAAM,UAAW,OAAO,CAAC,YAAY;QAClE,MAAM;QACN,IAAI;QACJ,KAAK,YAAY;YACf,QAAQ;YACR,YAAY;QACd,IAAI;IACN;IAEA,MAAM,SAAS,EAAE;IACjB,KAAK,MAAM,OAAO,SAAU;QAC1B,OAAQ,IAAI,IAAI;YACd,KAAK;gBACH,OAAO,IAAI,CAAC;oBACV,MAAM,IAAI,IAAI;oBACd,SAAS,IAAI,OAAO;oBACpB,WACE,CAAC,YACG,YACA,OAAO,IAAI,SAAS,KAAK,WACzB,IAAI,SAAS,GACb,KAAK,SAAS,CAAC,IAAI,SAAS;gBAEpC;gBACA;YACF,KAAK;YACL,KAAK;gBACH,IAAI,QAAQ,CAAC;oBACX,MAAM;oBACN,MAAM,OAAO,IAAI,IAAI;gBACvB;gBACA;YACF,KAAK;gBACH,IAAI,QAAQ,CAAC;oBACX,MAAM;oBACN,MAAM,OAAO,IAAI,IAAI;gBACvB;gBACA;YACF,KAAK;gBACH,IAAI,QAAQ,CAAC;oBACX,MAAM;oBACN,MAAM,OAAO,IAAI,GAAG;oBACpB,MAAM,IAAI,IAAI;gBAChB;gBACA;YACF,KAAK;gBACH,IAAI,QAAQ,CAAC;oBACX,MAAM;oBACN,MAAM,OAAO,IAAI,IAAI;oBACrB,MAAM;gBACR;gBACA;YACF;gBAEE;QACJ;IACF;IACA,OAAO;QACL;QACA,KAAK,YAAY,KAAK,SAAS,CAAC,OAAO;QACvC;IACF;AACF"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/list.js"],"sourcesContent":["'use strict'\n\nlet list = {\n  comma(string) {\n    return list.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  }\n}\n\nmodule.exports = list\nlist.default = list\n"],"names":[],"mappings":"AAAA;AAEA,IAAI,OAAO;IACT,OAAM,MAAM;QACV,OAAO,KAAK,KAAK,CAAC,QAAQ;YAAC;SAAI,EAAE;IACnC;IAEA,OAAM,MAAM;QACV,IAAI,SAAS;YAAC;YAAK;YAAM;SAAK;QAC9B,OAAO,KAAK,KAAK,CAAC,QAAQ;IAC5B;IAEA,OAAM,MAAM,EAAE,UAAU,EAAE,IAAI;QAC5B,IAAI,QAAQ,EAAE;QACd,IAAI,UAAU;QACd,IAAI,QAAQ;QAEZ,IAAI,OAAO;QACX,IAAI,UAAU;QACd,IAAI,YAAY;QAChB,IAAI,SAAS;QAEb,KAAK,IAAI,UAAU,OAAQ;YACzB,IAAI,QAAQ;gBACV,SAAS;YACX,OAAO,IAAI,WAAW,MAAM;gBAC1B,SAAS;YACX,OAAO,IAAI,SAAS;gBAClB,IAAI,WAAW,WAAW;oBACxB,UAAU;gBACZ;YACF,OAAO,IAAI,WAAW,OAAO,WAAW,KAAK;gBAC3C,UAAU;gBACV,YAAY;YACd,OAAO,IAAI,WAAW,KAAK;gBACzB,QAAQ;YACV,OAAO,IAAI,WAAW,KAAK;gBACzB,IAAI,OAAO,GAAG,QAAQ;YACxB,OAAO,IAAI,SAAS,GAAG;gBACrB,IAAI,WAAW,QAAQ,CAAC,SAAS,QAAQ;YAC3C;YAEA,IAAI,OAAO;gBACT,IAAI,YAAY,IAAI,MAAM,IAAI,CAAC,QAAQ,IAAI;gBAC3C,UAAU;gBACV,QAAQ;YACV,OAAO;gBACL,WAAW;YACb;QACF;QAEA,IAAI,QAAQ,YAAY,IAAI,MAAM,IAAI,CAAC,QAAQ,IAAI;QACnD,OAAO;IACT;AACF;AAEA,OAAO,OAAO,GAAG;AACjB,KAAK,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/stringifier.js"],"sourcesContent":["'use strict'\n\nconst DEFAULT_RAW = {\n  after: '\\n',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  beforeDecl: '\\n',\n  beforeOpen: ' ',\n  beforeRule: '\\n',\n  colon: ': ',\n  commentLeft: ' ',\n  commentRight: ' ',\n  emptyBody: '',\n  indent: '    ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/stringify.js"],"sourcesContent":["'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n"],"names":[],"mappings":"AAAA;AAEA,IAAI;AAEJ,SAAS,UAAU,IAAI,EAAE,OAAO;IAC9B,IAAI,MAAM,IAAI,YAAY;IAC1B,IAAI,SAAS,CAAC;AAChB;AAEA,OAAO,OAAO,GAAG;AACjB,UAAU,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 569, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/symbols.js"],"sourcesContent":["'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n"],"names":[],"mappings":"AAAA;AAEA,OAAO,OAAO,CAAC,OAAO,GAAG,OAAO;AAEhC,OAAO,OAAO,CAAC,EAAE,GAAG,OAAO","ignoreList":[0]}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/node.js"],"sourcesContent":["'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\nlet { isClean, my } = require('./symbols')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nfunction sourceOffset(inputCSS, position) {\n  // Not all custom syntaxes support `offset` in `source.start` and `source.end`\n  if (\n    position &&\n    typeof position.offset !== 'undefined'\n  ) {\n    return position.offset;\n  }\n\n  let column = 1\n  let line = 1\n  let offset = 0\n\n  for (let i = 0; i < inputCSS.length; i++) {\n    if (line === position.line && column === position.column) {\n      offset = i\n      break\n    }\n\n    if (inputCSS[i] === '\\n') {\n      column = 1\n      line += 1\n    } else {\n      column += 1\n    }\n  }\n\n  return offset\n}\n\nclass Node {\n  get proxyOf() {\n    return this\n  }\n\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  /* c8 ignore next 3 */\n  markClean() {\n    this[isClean] = true\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let inputString = ('document' in this.source.input)\n        ? this.source.input.document\n        : this.source.input.css\n      let stringRepresentation = inputString.slice(\n        sourceOffset(inputString, this.source.start),\n        sourceOffset(inputString, this.source.end)\n      )\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  positionInside(index) {\n    let column = this.source.start.column\n    let line = this.source.start.line\n    let inputString = ('document' in this.source.input)\n      ? this.source.input.document\n      : this.source.input.css\n    let offset = sourceOffset(inputString, this.source.start)\n    let end = offset + index\n\n    for (let i = offset; i < end; i++) {\n      if (inputString[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { column, line }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    }\n    let end = this.source.end\n      ? {\n          column: this.source.end.column + 1,\n          line: this.source.end.line\n        }\n      : {\n          column: start.column + 1,\n          line: start.line\n        }\n\n    if (opts.word) {\n      let inputString = ('document' in this.source.input)\n        ? this.source.input.document\n        : this.source.input.css\n      let stringRepresentation = inputString.slice(\n        sourceOffset(inputString, this.source.start),\n        sourceOffset(inputString, this.source.end)\n      )\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index)\n        end = this.positionInside(\n          index + opts.word.length,\n        )\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        }\n      } else if (typeof opts.endIndex === 'number') {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { column: start.column + 1, line: start.line }\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 947, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/root.js"],"sourcesContent":["'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n"],"names":[],"mappings":"AAAA;AAEA,IAAI;AAEJ,IAAI,YAAY;AAEhB,MAAM,aAAa;IACjB,YAAY,QAAQ,CAAE;QACpB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE;IAClC;IAEA,UAAU,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;QAC7B,IAAI,QAAQ,KAAK,CAAC,UAAU;QAE5B,IAAI,QAAQ;YACV,IAAI,SAAS,WAAW;gBACtB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;oBACzB,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM;gBAChD,OAAO;oBACL,OAAO,OAAO,IAAI,CAAC,MAAM;gBAC3B;YACF,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ;gBAChC,KAAK,IAAI,QAAQ,MAAO;oBACtB,KAAK,IAAI,CAAC,MAAM,GAAG,OAAO,IAAI,CAAC,MAAM;gBACvC;YACF;QACF;QAEA,OAAO;IACT;IAEA,YAAY,KAAK,EAAE,MAAM,EAAE;QACzB,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC;QAEvB,IAAI,CAAC,UAAU,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;YACnD,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;QAC3D;QAEA,OAAO,KAAK,CAAC,YAAY;IAC3B;IAEA,SAAS,OAAO,CAAC,CAAC,EAAE;QAClB,IAAI,OAAO,IAAI,WAAW,IAAI,aAAa,IAAI,EAAE;QACjD,OAAO,KAAK,SAAS;IACvB;AACF;AAEA,KAAK,kBAAkB,GAAG,CAAA;IACxB,aAAa;AACf;AAEA,KAAK,iBAAiB,GAAG,CAAA;IACvB,YAAY;AACd;AAEA,OAAO,OAAO,GAAG;AACjB,KAAK,OAAO,GAAG;AAEf,UAAU,YAAY,CAAC","ignoreList":[0]}},
    {"offset": {"line": 994, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 999, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/rule.js"],"sourcesContent":["'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n"],"names":[],"mappings":"AAAA;AAEA,IAAI;AACJ,IAAI;AAEJ,MAAM,aAAa;IACjB,IAAI,YAAY;QACd,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,QAAQ;IACjC;IAEA,IAAI,UAAU,MAAM,EAAE;QACpB,IAAI,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU;QAC1D,IAAI,MAAM,QAAQ,KAAK,CAAC,EAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,WAAW;QACvD,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,CAAC;IAC9B;IAEA,YAAY,QAAQ,CAAE;QACpB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE;IAClC;AACF;AAEA,OAAO,OAAO,GAAG;AACjB,KAAK,OAAO,GAAG;AAEf,UAAU,YAAY,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1020, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/tokenize.js"],"sourcesContent":["'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, content, escape, next, quote\n  let currentToken, escaped, escapePos, n, prev\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1292, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/parser.js"],"sourcesContent":["'use strict'\n\nlet AtRule = require('./at-rule')\nlet Comment = require('./comment')\nlet Declaration = require('./declaration')\nlet Root = require('./root')\nlet Rule = require('./rule')\nlet tokenizer = require('./tokenize')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          node.source.end.offset++\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n              node.source.end.offset++\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        node.source.end.offset++\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let prev, token, type\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n    node.source.end.offset++\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n    node.source.end.offset++\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().startsWith('!') && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().startsWith('!')) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current.source.end.offset++\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.root.source.end = this.getPosition(this.tokenizer.position())\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n        prev.source.end = this.getPosition(token[2])\n        prev.source.end.offset += prev.raws.ownSemicolon.length\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { raw, value }\n    }\n    node[prop] = value\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  // Errors\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word ' + tokens[0][1],\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n}\n\nmodule.exports = Parser\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1831, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/parse.js"],"sourcesContent":["'use strict'\n\nlet Container = require('./container')\nlet Input = require('./input')\nlet Parser = require('./parser')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n"],"names":[],"mappings":"AAAA;AAEA,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,SAAS,MAAM,GAAG,EAAE,IAAI;IACtB,IAAI,QAAQ,IAAI,MAAM,KAAK;IAC3B,IAAI,SAAS,IAAI,OAAO;IACxB,IAAI;QACF,OAAO,KAAK;IACd,EAAE,OAAO,GAAG;QACV,wCAA2C;YACzC,IAAI,EAAE,IAAI,KAAK,oBAAoB,QAAQ,KAAK,IAAI,EAAE;gBACpD,IAAI,WAAW,IAAI,CAAC,KAAK,IAAI,GAAG;oBAC9B,EAAE,OAAO,IACP,oCACA,8BACA;gBACJ,OAAO,IAAI,UAAU,IAAI,CAAC,KAAK,IAAI,GAAG;oBACpC,EAAE,OAAO,IACP,oCACA,8BACA;gBACJ,OAAO,IAAI,WAAW,IAAI,CAAC,KAAK,IAAI,GAAG;oBACrC,EAAE,OAAO,IACP,oCACA,8BACA;gBACJ;YACF;QACF;QACA,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;AAEA,OAAO,OAAO,GAAG;AACjB,MAAM,OAAO,GAAG;AAEhB,UAAU,aAAa,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1864, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1874, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/warning.js"],"sourcesContent":["'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n"],"names":[],"mappings":"AAAA;AAEA,MAAM;IACJ,YAAY,IAAI,EAAE,OAAO,CAAC,CAAC,CAAE;QAC3B,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QAEZ,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,EAAE;YACjC,IAAI,QAAQ,KAAK,IAAI,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI;YAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,KAAK,CAAC,MAAM;YAChC,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,CAAC,IAAI;YAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,GAAG,CAAC,MAAM;QACnC;QAEA,IAAK,IAAI,OAAO,KAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;IAC7C;IAEA,WAAW;QACT,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;gBAChC,OAAO,IAAI,CAAC,KAAK;gBACjB,QAAQ,IAAI,CAAC,MAAM;gBACnB,MAAM,IAAI,CAAC,IAAI;YACjB,GAAG,OAAO;QACZ;QAEA,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,IAAI,CAAC,MAAM,GAAG,OAAO,IAAI,CAAC,IAAI;QACvC;QAEA,OAAO,IAAI,CAAC,IAAI;IAClB;AACF;AAEA,OAAO,OAAO,GAAG;AACjB,QAAQ,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 1904, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1909, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/result.js"],"sourcesContent":["'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  get content() {\n    return this.css\n  }\n\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n"],"names":[],"mappings":"AAAA;AAEA,IAAI;AAEJ,MAAM;IACJ,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,GAAG;IACjB;IAEA,YAAY,SAAS,EAAE,IAAI,EAAE,IAAI,CAAE;QACjC,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,QAAQ,GAAG,EAAE;QAClB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,GAAG,GAAG;IACb;IAEA,WAAW;QACT,OAAO,IAAI,CAAC,GAAG;IACjB;IAEA,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC,EAAE;QACpB,IAAI,CAAC,KAAK,MAAM,EAAE;YAChB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;gBACpD,KAAK,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa;YAC7C;QACF;QAEA,IAAI,UAAU,IAAI,QAAQ,MAAM;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAEnB,OAAO;IACT;IAEA,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK;IAC9C;AACF;AAEA,OAAO,OAAO,GAAG;AACjB,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 1942, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1947, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/warn-once.js"],"sourcesContent":["/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n"],"names":[],"mappings":"AAAA,6BAA6B,GAC7B;AAEA,IAAI,UAAU,CAAC;AAEf,OAAO,OAAO,GAAG,SAAS,SAAS,OAAO;IACxC,IAAI,OAAO,CAAC,QAAQ,EAAE;IACtB,OAAO,CAAC,QAAQ,GAAG;IAEnB,IAAI,OAAO,YAAY,eAAe,QAAQ,IAAI,EAAE;QAClD,QAAQ,IAAI,CAAC;IACf;AACF","ignoreList":[0]}},
    {"offset": {"line": 1956, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1961, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/no-work-result.js"],"sourcesContent":["'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet parse = require('./parse')\nconst Result = require('./result')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\n\nclass NoWorkResult {\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    } else {\n      map.clearAnnotation()\n      this.result.css = map.css\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n"],"names":[],"mappings":"AAAA;AAEA,IAAI;AACJ,IAAI;AACJ,MAAM;AACN,IAAI;AACJ,IAAI;AAEJ,MAAM;IACJ,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG;IACxB;IAEA,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG;IACxB;IAEA,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG;IACxB;IAEA,IAAI,WAAW;QACb,OAAO,EAAE;IACX;IAEA,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;IACzB;IAEA,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS;IAC9B;IAEA,IAAI,OAAO;QACT,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAC,KAAK;QACnB;QAEA,IAAI;QACJ,IAAI,SAAS;QAEb,IAAI;YACF,OAAO,OAAO,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK;QACrC,EAAE,OAAO,OAAO;YACd,IAAI,CAAC,KAAK,GAAG;QACf;QAEA,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,MAAM,IAAI,CAAC,KAAK;QAClB,OAAO;YACL,IAAI,CAAC,KAAK,GAAG;YACb,OAAO;QACT;IACF;IAEA,IAAI,CAAC,OAAO,WAAW,CAAC,GAAG;QACzB,OAAO;IACT;IAEA,YAAY,SAAS,EAAE,GAAG,EAAE,IAAI,CAAE;QAChC,MAAM,IAAI,QAAQ;QAClB,IAAI,CAAC,WAAW,GAAG;QAEnB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI;QAEJ,IAAI,MAAM;QACV,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,IAAI,CAAC,UAAU,EAAE,MAAM,IAAI,CAAC,KAAK;QAC1D,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG;QAElB,IAAI,OAAO,IAAI;QACf,OAAO,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ;YACzC;gBACE,OAAO,KAAK,IAAI;YAClB;QACF;QAEA,IAAI,MAAM,IAAI,aAAa,KAAK,MAAM,IAAI,CAAC,KAAK,EAAE;QAClD,IAAI,IAAI,KAAK,IAAI;YACf,IAAI,CAAC,cAAc,aAAa,GAAG,IAAI,QAAQ;YAC/C,IAAI,cAAc;gBAChB,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG;YACpB;YACA,IAAI,cAAc;gBAChB,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG;YACpB;QACF,OAAO;YACL,IAAI,eAAe;YACnB,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG;QAC3B;IACF;IAEA,QAAQ;QACN,IAAI,IAAI,CAAC,KAAK,EAAE,OAAO,QAAQ,MAAM,CAAC,IAAI,CAAC,KAAK;QAChD,OAAO,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM;IACpC;IAEA,MAAM,UAAU,EAAE;QAChB,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B;IAEA,QAAQ,SAAS,EAAE;QACjB,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW;IACtC;IAEA,OAAO;QACL,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,KAAK;QAChC,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,KAAK,WAAW,EAAE,UAAU,EAAE;QAC5B,wCAA2C;YACzC,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,KAAK,GAAG;gBAC3B,SACE,mEACE,oEACA;YAEN;QACF;QAEA,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa;IACxC;IAEA,WAAW;QACT,OAAO,IAAI,CAAC,IAAI;IAClB;IAEA,WAAW;QACT,OAAO,EAAE;IACX;AACF;AAEA,OAAO,OAAO,GAAG;AACjB,aAAa,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 2069, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2074, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/processor.js"],"sourcesContent":["'use strict'\n\nlet Document = require('./document')\nlet LazyResult = require('./lazy-result')\nlet NoWorkResult = require('./no-work-result')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.5.3'\n    this.plugins = this.normalize(plugins)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n\n  process(css, opts = {}) {\n    if (\n      !this.plugins.length &&\n      !opts.parser &&\n      !opts.stringifier &&\n      !opts.syntax\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n"],"names":[],"mappings":"AAAA;AAEA,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,MAAM;IACJ,YAAY,UAAU,EAAE,CAAE;QACxB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;IAChC;IAEA,UAAU,OAAO,EAAE;QACjB,IAAI,aAAa,EAAE;QACnB,KAAK,IAAI,KAAK,QAAS;YACrB,IAAI,EAAE,OAAO,KAAK,MAAM;gBACtB,IAAI;YACN,OAAO,IAAI,EAAE,OAAO,EAAE;gBACpB,IAAI,EAAE,OAAO;YACf;YAEA,IAAI,OAAO,MAAM,YAAY,MAAM,OAAO,CAAC,EAAE,OAAO,GAAG;gBACrD,aAAa,WAAW,MAAM,CAAC,EAAE,OAAO;YAC1C,OAAO,IAAI,OAAO,MAAM,YAAY,EAAE,aAAa,EAAE;gBACnD,WAAW,IAAI,CAAC;YAClB,OAAO,IAAI,OAAO,MAAM,YAAY;gBAClC,WAAW,IAAI,CAAC;YAClB,OAAO,IAAI,OAAO,MAAM,YAAY,CAAC,EAAE,KAAK,IAAI,EAAE,SAAS,GAAG;gBAC5D,wCAA2C;oBACzC,MAAM,IAAI,MACR,qEACE,8DACA;gBAEN;YACF,OAAO;gBACL,MAAM,IAAI,MAAM,IAAI;YACtB;QACF;QACA,OAAO;IACT;IAEA,QAAQ,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE;QACtB,IACE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IACpB,CAAC,KAAK,MAAM,IACZ,CAAC,KAAK,WAAW,IACjB,CAAC,KAAK,MAAM,EACZ;YACA,OAAO,IAAI,aAAa,IAAI,EAAE,KAAK;QACrC,OAAO;YACL,OAAO,IAAI,WAAW,IAAI,EAAE,KAAK;QACnC;IACF;IAEA,IAAI,MAAM,EAAE;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;YAAC;SAAO;QAC1D,OAAO,IAAI;IACb;AACF;AAEA,OAAO,OAAO,GAAG;AACjB,UAAU,OAAO,GAAG;AAEpB,KAAK,iBAAiB,CAAC;AACvB,SAAS,iBAAiB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2131, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/postcss.js"],"sourcesContent":["'use strict'\n\nlet AtRule = require('./at-rule')\nlet Comment = require('./comment')\nlet Container = require('./container')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet Document = require('./document')\nlet fromJSON = require('./fromJSON')\nlet Input = require('./input')\nlet LazyResult = require('./lazy-result')\nlet list = require('./list')\nlet Node = require('./node')\nlet parse = require('./parse')\nlet Processor = require('./processor')\nlet Result = require('./result.js')\nlet Root = require('./root')\nlet Rule = require('./rule')\nlet stringify = require('./stringify')\nlet Warning = require('./warning')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n"],"names":[],"mappings":"AAAA;AAEA,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,SAAS,QAAQ,GAAG,OAAO;IACzB,IAAI,QAAQ,MAAM,KAAK,KAAK,MAAM,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG;QACrD,UAAU,OAAO,CAAC,EAAE;IACtB;IACA,OAAO,IAAI,UAAU;AACvB;AAEA,QAAQ,MAAM,GAAG,SAAS,OAAO,IAAI,EAAE,WAAW;IAChD,IAAI,iBAAiB;IACrB,SAAS,QAAQ,GAAG,IAAI;QACtB,sCAAsC;QACtC,IAAI,WAAW,QAAQ,IAAI,IAAI,CAAC,gBAAgB;YAC9C,iBAAiB;YACjB,sCAAsC;YACtC,QAAQ,IAAI,CACV,OACE,wDACA;YAEJ,IAAI,QAAQ,GAAG,CAAC,IAAI,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO;gBACzD,oBAAoB,GACpB,sCAAsC;gBACtC,QAAQ,IAAI,CACV,OACE,qCACA;YAEN;QACF;QACA,IAAI,cAAc,eAAe;QACjC,YAAY,aAAa,GAAG;QAC5B,YAAY,cAAc,GAAG,IAAI,YAAY,OAAO;QACpD,OAAO;IACT;IAEA,IAAI;IACJ,OAAO,cAAc,CAAC,SAAS,WAAW;QACxC;YACE,IAAI,CAAC,OAAO,QAAQ;YACpB,OAAO;QACT;IACF;IAEA,QAAQ,OAAO,GAAG,SAAU,GAAG,EAAE,WAAW,EAAE,UAAU;QACtD,OAAO,QAAQ;YAAC,QAAQ;SAAY,EAAE,OAAO,CAAC,KAAK;IACrD;IAEA,OAAO;AACT;AAEA,QAAQ,SAAS,GAAG;AACpB,QAAQ,KAAK,GAAG;AAChB,QAAQ,QAAQ,GAAG;AACnB,QAAQ,IAAI,GAAG;AAEf,QAAQ,OAAO,GAAG,CAAA,WAAY,IAAI,QAAQ;AAC1C,QAAQ,MAAM,GAAG,CAAA,WAAY,IAAI,OAAO;AACxC,QAAQ,IAAI,GAAG,CAAA,WAAY,IAAI,YAAY;AAC3C,QAAQ,IAAI,GAAG,CAAA,WAAY,IAAI,KAAK;AACpC,QAAQ,IAAI,GAAG,CAAA,WAAY,IAAI,KAAK;AACpC,QAAQ,QAAQ,GAAG,CAAA,WAAY,IAAI,SAAS;AAE5C,QAAQ,cAAc,GAAG;AACzB,QAAQ,WAAW,GAAG;AACtB,QAAQ,SAAS,GAAG;AACpB,QAAQ,SAAS,GAAG;AACpB,QAAQ,QAAQ,GAAG;AACnB,QAAQ,OAAO,GAAG;AAClB,QAAQ,OAAO,GAAG;AAClB,QAAQ,MAAM,GAAG;AACjB,QAAQ,MAAM,GAAG;AACjB,QAAQ,KAAK,GAAG;AAChB,QAAQ,IAAI,GAAG;AACf,QAAQ,IAAI,GAAG;AACf,QAAQ,IAAI,GAAG;AAEf,WAAW,eAAe,CAAC;AAE3B,OAAO,OAAO,GAAG;AACjB,QAAQ,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 2214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2220, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/node_modules/postcss/lib/postcss.mjs"],"sourcesContent":["import postcss from './postcss.js'\n\nexport default postcss\n\nexport const stringify = postcss.stringify\nexport const fromJSON = postcss.fromJSON\nexport const plugin = postcss.plugin\nexport const parse = postcss.parse\nexport const list = postcss.list\n\nexport const document = postcss.document\nexport const comment = postcss.comment\nexport const atRule = postcss.atRule\nexport const rule = postcss.rule\nexport const decl = postcss.decl\nexport const root = postcss.root\n\nexport const CssSyntaxError = postcss.CssSyntaxError\nexport const Declaration = postcss.Declaration\nexport const Container = postcss.Container\nexport const Processor = postcss.Processor\nexport const Document = postcss.Document\nexport const Comment = postcss.Comment\nexport const Warning = postcss.Warning\nexport const AtRule = postcss.AtRule\nexport const Result = postcss.Result\nexport const Input = postcss.Input\nexport const Rule = postcss.Rule\nexport const Root = postcss.Root\nexport const Node = postcss.Node\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;uCAEe,sIAAA,CAAA,UAAO;AAEf,MAAM,YAAY,sIAAA,CAAA,UAAO,CAAC,SAAS;AACnC,MAAM,WAAW,sIAAA,CAAA,UAAO,CAAC,QAAQ;AACjC,MAAM,SAAS,sIAAA,CAAA,UAAO,CAAC,MAAM;AAC7B,MAAM,QAAQ,sIAAA,CAAA,UAAO,CAAC,KAAK;AAC3B,MAAM,OAAO,sIAAA,CAAA,UAAO,CAAC,IAAI;AAEzB,MAAM,WAAW,sIAAA,CAAA,UAAO,CAAC,QAAQ;AACjC,MAAM,UAAU,sIAAA,CAAA,UAAO,CAAC,OAAO;AAC/B,MAAM,SAAS,sIAAA,CAAA,UAAO,CAAC,MAAM;AAC7B,MAAM,OAAO,sIAAA,CAAA,UAAO,CAAC,IAAI;AACzB,MAAM,OAAO,sIAAA,CAAA,UAAO,CAAC,IAAI;AACzB,MAAM,OAAO,sIAAA,CAAA,UAAO,CAAC,IAAI;AAEzB,MAAM,iBAAiB,sIAAA,CAAA,UAAO,CAAC,cAAc;AAC7C,MAAM,cAAc,sIAAA,CAAA,UAAO,CAAC,WAAW;AACvC,MAAM,YAAY,sIAAA,CAAA,UAAO,CAAC,SAAS;AACnC,MAAM,YAAY,sIAAA,CAAA,UAAO,CAAC,SAAS;AACnC,MAAM,WAAW,sIAAA,CAAA,UAAO,CAAC,QAAQ;AACjC,MAAM,UAAU,sIAAA,CAAA,UAAO,CAAC,OAAO;AAC/B,MAAM,UAAU,sIAAA,CAAA,UAAO,CAAC,OAAO;AAC/B,MAAM,SAAS,sIAAA,CAAA,UAAO,CAAC,MAAM;AAC7B,MAAM,SAAS,sIAAA,CAAA,UAAO,CAAC,MAAM;AAC7B,MAAM,QAAQ,sIAAA,CAAA,UAAO,CAAC,KAAK;AAC3B,MAAM,OAAO,sIAAA,CAAA,UAAO,CAAC,IAAI;AACzB,MAAM,OAAO,sIAAA,CAAA,UAAO,CAAC,IAAI;AACzB,MAAM,OAAO,sIAAA,CAAA,UAAO,CAAC,IAAI","ignoreList":[0]}},
    {"offset": {"line": 2274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}